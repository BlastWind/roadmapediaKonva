General Notes:
 - Dragula supports clicks only and drag
 - D3 supports drag with its own d3.behavior.drag(), its set up is:
      var drag = d3.behavior.drag()
          .on("drag", function(d,i) {
          //able to then use d and i if needed
              })
           });
 - we can go declarative with react like <svg blah blah blah> instead of
   d3.select body .append svg or some crap (Medium: how and why d3 with react)
 - when using react + d3 declaratively, it is wise to make all the variables
   that uses d3 then in the return statement return svg and g and html elements
   these html elements can use the variables d and i from d3
 - advantage to using d3 and react is to get rid of the annoying d3.selectall
   and d3.appends

JS bin example:
 - on drag, select all g and give them cx and cy
 - if class is resizingContainer, then on Drag, give them a new r
   calculated with Math.pow(Math.pow(this.attributes.cx.value - d3.event.x, 2)
   + Math.pow(this.attributes.cy.value - d3.event.y, 2), 0.5)

Konva notes:
 - Shapes available: Rect, circle, line, text, SVG path...
 - like photoshop. There are stage and layer and shapes, stage contains all layers, layers contain shapes
 - obj attributes: x, y, width, height, fill, shadowBlur,
 - Konva enables high performance animations, transitions
